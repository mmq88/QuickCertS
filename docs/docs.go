// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "consumes": [
        "application/json"
    ],
    "produces": [
        "application/json"
    ],
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {
            "name": "MMQ",
            "email": "mail@mmq.dev"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/apply/cert": {
            "post": {
                "description": "Provide the client with a certificate(unique key and signature) for app.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Apply"
                ],
                "summary": "Provide the client with a certificate(unique key and signature) for app.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authorized token for client access. This value is set in path_to_qcs/configs/server.toml.",
                        "name": "X-Access-Token",
                        "in": "header"
                    },
                    {
                        "description": "Apply certificate information",
                        "name": "applyInfo",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.ApplyCertInfo"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.ApplyCertResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/model.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/model.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/apply/temp-permit": {
            "post": {
                "description": "Allow users to apply for temporary use permits on devices.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Apply"
                ],
                "summary": "Allow users to apply for temporary use permits on devices",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authorized token for client access. This value is set in path_to_qcs/configs/server.toml.",
                        "name": "X-Access-Token",
                        "in": "header"
                    },
                    {
                        "description": "Apply temporary permit information",
                        "name": "applyInfo",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.ApplyTempPermitInfo"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.ApplyTempPermitResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/model.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/model.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/sn/create": {
            "post": {
                "description": "Create serial number by providing the serial number and the reason. only requests with valid tokens are allowed.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "SN"
                ],
                "summary": "Create serial number to the database",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Security code for admin access. Check path_to_qcs/configs/server.toml for more information.",
                        "name": "X-RunTime-Code",
                        "in": "header"
                    },
                    {
                        "type": "string",
                        "description": "Security token for admin access. This value is set in path_to_qcs/configs/allowlist.toml.",
                        "name": "X-Access-Token",
                        "in": "header"
                    },
                    {
                        "description": "Serial number information",
                        "name": "snInfo",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.SNInfo"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.CreateSNResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/model.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/model.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/sn/generate": {
            "post": {
                "description": "Generate serial number(s) by providing the count and the reason. only requests with valid tokens are allowed.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "SN"
                ],
                "summary": "Generate serial number(s) to the database",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Security code for admin access. Check path_to_qcs/configs/server.toml for more information.",
                        "name": "X-RunTime-Code",
                        "in": "header"
                    },
                    {
                        "type": "string",
                        "description": "Security token for admin access. This value is set in path_to_qcs/configs/allowlist.toml.",
                        "name": "X-Access-Token",
                        "in": "header"
                    },
                    {
                        "description": "Serial number(s) information",
                        "name": "snInfo",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.SNsInfo"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.CreateSNResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/model.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/model.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/sn/get-all": {
            "get": {
                "description": "Get cert list from the database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "SN"
                ],
                "summary": "Get cert list from the database",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Security code for admin access. Check path_to_qcs/configs/server.toml for more information.",
                        "name": "X-RunTime-Code",
                        "in": "header"
                    },
                    {
                        "type": "string",
                        "description": "Security token for admin access. This value is set in path_to_qcs/configs/allowlist.toml.",
                        "name": "X-Access-Token",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.GetAllSNResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/model.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/model.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/sn/get-available": {
            "get": {
                "description": "Get available S/N from the database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "SN"
                ],
                "summary": "Get available S/N from the database",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Security code for admin access. Check path_to_qcs/configs/server.toml for more information.",
                        "name": "X-RunTime-Code",
                        "in": "header"
                    },
                    {
                        "type": "string",
                        "description": "Security token for admin access. This value is set in path_to_qcs/configs/allowlist.toml.",
                        "name": "X-Access-Token",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.GetAvaliableSNResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/model.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/model.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/sn/update": {
            "post": {
                "description": "Update a note for a serial number by providing the serial number and the note.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "SN"
                ],
                "summary": "Update a note for a serial number",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Security code for admin access. Check path_to_qcs/configs/server.toml for more information.",
                        "name": "X-RunTime-Code",
                        "in": "header"
                    },
                    {
                        "type": "string",
                        "description": "Security token for admin access. This value is set in path_to_qcs/configs/allowlist.toml.",
                        "name": "X-Access-Token",
                        "in": "header"
                    },
                    {
                        "description": "Serial number and note",
                        "name": "certNote",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.CertNote"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.UpdateCertNoteResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/model.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/model.ErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "model.ApplyCertInfo": {
            "type": "object",
            "required": [
                "board_name",
                "board_producer",
                "mac_address",
                "serial_number"
            ],
            "properties": {
                "board_name": {
                    "type": "string",
                    "example": "ROG CROSSHAIR X670E HERO"
                },
                "board_producer": {
                    "type": "string",
                    "example": "ASUSTEK COMPUTER INCORPORATION"
                },
                "mac_address": {
                    "type": "string",
                    "example": "B42499FE0000"
                },
                "serial_number": {
                    "type": "string",
                    "example": "779f-4e90-aebd-4295-881a-f8d7"
                }
            }
        },
        "model.ApplyCertResponse": {
            "type": "object",
            "properties": {
                "key": {
                    "type": "string",
                    "example": "3266cd6a16ca77f9c0f0ff9934eb0e29c4b6bb0729cde98811f9f0caf76d603c"
                },
                "signature": {
                    "type": "string",
                    "example": "MNj/g7W+X5PmirfgWl5jveV54t50+LZAPmByh5Py880pB2z67Ser0YvZ2G/mTNV4XcIrKmLy1ICFmQ1esjydhvBj1FOuTm3eTIixUIsFLxwlW2co/R6kCIjNRydB3N7L/kWv+ZwSjsSsdHqmMUleXV3OJruxeoXV8TLRCSGE4tHGEwhPULuBLn2aldIehDTgteJx1O1YNJGIcDM3NWVDjJnUA0Bjhq3oRvXWN4M23SnZZG2vT94wJIK0X5q6oNqFTupFjDVBCFcHeWoxQ5xZdPhfXF8rC/VTb4vkZZm5RIiIK1UC9XVaAsXVPEzlxVfYJ0gh+wULx8syE2QyB5GfyQ=="
                }
            }
        },
        "model.ApplyTempPermitInfo": {
            "type": "object",
            "required": [
                "board_name",
                "board_producer",
                "mac_address"
            ],
            "properties": {
                "board_name": {
                    "type": "string",
                    "example": "ROG CROSSHAIR X670E HERO"
                },
                "board_producer": {
                    "type": "string",
                    "example": "ASUSTEK COMPUTER INCORPORATION"
                },
                "mac_address": {
                    "type": "string",
                    "example": "B42499FE0000"
                }
            }
        },
        "model.ApplyTempPermitResponse": {
            "type": "object",
            "properties": {
                "remainingTime": {
                    "type": "integer",
                    "example": 604800
                },
                "status": {
                    "type": "string",
                    "example": "activated"
                }
            }
        },
        "model.Cert": {
            "type": "object",
            "properties": {
                "key": {
                    "type": "string",
                    "example": "3266cd6a16ca77f9c0f0ff9934eb0e29c4b6bb0729cde98811f9f0caf76d603c"
                },
                "note": {
                    "type": "string",
                    "example": "Updated note."
                },
                "sn": {
                    "type": "string",
                    "example": "779f-4e90-aebd-4295-881a-f8d7"
                }
            }
        },
        "model.CertNote": {
            "type": "object",
            "required": [
                "note",
                "serial_number"
            ],
            "properties": {
                "note": {
                    "type": "string",
                    "example": "Additional information"
                },
                "serial_number": {
                    "type": "string",
                    "example": "779f-4e90-aebd-4295-881a-f8d7"
                }
            }
        },
        "model.CreateSNResponse": {
            "type": "object",
            "properties": {
                "msg": {
                    "type": "string",
                    "example": "Successfully uploaded a new S/N."
                },
                "serial_number": {
                    "type": "string",
                    "example": "779f-4e90-aebd-4295-881a-f8d7"
                }
            }
        },
        "model.ErrorResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string",
                    "example": "Error message."
                }
            }
        },
        "model.GetAllSNResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.Cert"
                    }
                }
            }
        },
        "model.GetAvaliableSNResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": [
                        "779f-4e90-aebd-4295-881a-f8d7"
                    ]
                }
            }
        },
        "model.SNInfo": {
            "type": "object",
            "required": [
                "reason",
                "serial_number"
            ],
            "properties": {
                "reason": {
                    "type": "string",
                    "example": "For testing."
                },
                "serial_number": {
                    "type": "string",
                    "example": "779f-4e90-aebd-4295-881a-f8d7"
                }
            }
        },
        "model.SNsInfo": {
            "type": "object",
            "required": [
                "count",
                "reason"
            ],
            "properties": {
                "count": {
                    "type": "integer",
                    "example": 1
                },
                "reason": {
                    "type": "string",
                    "example": "For testing."
                }
            }
        },
        "model.UpdateCertNoteResponse": {
            "type": "object",
            "properties": {
                "msg": {
                    "type": "string",
                    "example": "Successfully updated the note of specified S/N."
                },
                "note": {
                    "type": "string",
                    "example": "Updated note."
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:33333",
	BasePath:         "/api/v1",
	Schemes:          []string{"http", "https"},
	Title:            "QuickCertS API",
	Description:      "This is the API for QuickCertS.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
